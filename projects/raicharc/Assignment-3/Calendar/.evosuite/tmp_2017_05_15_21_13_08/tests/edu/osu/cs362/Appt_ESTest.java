/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 04:18:17 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(10, 10, 10, 10, 10, "InvalidXGCRepresentation", "");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t10/10/10 at 10:10am ,InvalidXGCRepresentation, \n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(0, 31, 31, 5466, 31, "1697-02-01T00:00:00Z", "0.");
      assertEquals(0, appt0.getStartHour());
      assertEquals(31, appt0.getStartMinute());
      assertEquals(31, appt0.getStartYear());
      assertEquals(31, appt0.getStartDay());
      assertEquals("0.", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals("1697-02-01T00:00:00Z", appt0.getTitle());
      assertEquals(5466, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, (-2147483617), (-2147483617), (String) null, (String) null);
      assertEquals(-2147483617, appt0.getStartMonth());
      assertEquals(-2147483617, appt0.getStartYear());
      assertEquals(23, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, 11, 0, "", "");
      boolean boolean0 = appt0.getValid();
      assertEquals(11, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertEquals(12, appt0.getStartDay());
      assertEquals(12, appt0.getStartMinute());
      assertEquals(12, appt0.getStartHour());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, (String) null, (String) null);
      String string0 = appt0.getTitle();
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartYear());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(0, (-1234), 0, 0, 0, "FJHb", "FJHb");
      int int0 = appt0.getStartYear();
      assertEquals(-1234, appt0.getStartMinute());
      assertEquals("FJHb", appt0.getTitle());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertEquals("FJHb", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(1491, 1491, 1491, 1491, 0, "ucFP=Jtb^QHo,Ep", "ucFP=Jtb^QHo,Ep");
      int int0 = appt0.getStartMonth();
      assertEquals("ucFP=Jtb^QHo,Ep", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(1491, appt0.getStartMinute());
      assertEquals(0, appt0.getStartYear());
      assertEquals(1491, int0);
      assertEquals(1491, appt0.getStartHour());
      assertEquals("ucFP=Jtb^QHo,Ep", appt0.getTitle());
      assertEquals(1491, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt((-3064), 89, 0, (-3064), 0, "--%M--%z", "");
      int int0 = appt0.getStartMonth();
      assertEquals(89, appt0.getStartMinute());
      assertEquals("--%M--%z", appt0.getTitle());
      assertEquals((-3064), int0);
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
      assertEquals("", appt0.getDescription());
      assertEquals(-3064, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 15, 59, (-2886), "--", "");
      int int0 = appt0.getStartMinute();
      assertEquals("--", appt0.getTitle());
      assertEquals(-2886, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(59, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals("", appt0.getDescription());
      assertEquals(15, appt0.getStartDay());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(1074, 1074, 1074, 1074, 1074, "Yi2y/QS.(+fg!J", "Yi2y/QS.(+fg!J");
      int int0 = appt0.getStartMinute();
      assertEquals(1074, appt0.getStartDay());
      assertEquals(1074, int0);
      assertEquals("Yi2y/QS.(+fg!J", appt0.getDescription());
      assertFalse(appt0.getValid());
      assertEquals(1074, appt0.getStartYear());
      assertEquals(1074, appt0.getStartMonth());
      assertEquals(1074, appt0.getStartHour());
      assertEquals("Yi2y/QS.(+fg!J", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, (-1234), 0, 0, 0, "FJHb", "FJHb");
      int int0 = appt0.getStartHour();
      assertEquals("FJHb", appt0.getDescription());
      assertEquals(0, int0);
      assertEquals("FJHb", appt0.getTitle());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(-1234, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, (-2880), (-2502), "", "");
      int int0 = appt0.getStartHour();
      assertEquals(12, int0);
      assertEquals(12, appt0.getStartMinute());
      assertEquals(12, appt0.getStartDay());
      assertEquals(-2502, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-2880, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(1491, 1491, 1491, 1491, 0, "ucFP=Jtb^QHo,Ep", "ucFP=Jtb^QHo,Ep");
      int int0 = appt0.getStartDay();
      assertEquals(1491, appt0.getStartMonth());
      assertEquals(1491, int0);
      assertEquals(1491, appt0.getStartHour());
      assertEquals("ucFP=Jtb^QHo,Ep", appt0.getDescription());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(1491, appt0.getStartMinute());
      assertEquals("ucFP=Jtb^QHo,Ep", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(83, (-606), (-1696), 83, (-606), " at ", " at ");
      int int0 = appt0.getStartDay();
      assertEquals(83, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(83, appt0.getStartHour());
      assertEquals(" at ", appt0.getTitle());
      assertEquals(-606, appt0.getStartYear());
      assertEquals((-1696), int0);
      assertEquals(" at ", appt0.getDescription());
      assertEquals(-606, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 1, 0, (-1891), "\t", (String) null);
      String string0 = appt0.getDescription();
      assertEquals(-1891, appt0.getStartYear());
      assertEquals(1, appt0.getStartDay());
      assertEquals("", string0);
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
      assertEquals("\t", appt0.getTitle());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt((-1527), (-1527), (-1527), (-1527), (-601), "Year", "Year");
      appt0.setDescription("Year");
      assertFalse(appt0.getValid());
      assertEquals("Year", appt0.getDescription());
      assertEquals(-1527, appt0.getStartHour());
      assertEquals("Year", appt0.getTitle());
      assertEquals(-601, appt0.getStartYear());
      assertEquals(-1527, appt0.getStartDay());
      assertEquals(-1527, appt0.getStartMinute());
      assertEquals(-1527, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt((-2227), (-2227), 1310, 1310, 689, "IY$sP,S", (String) null);
      assertEquals("", appt0.getDescription());
      
      appt0.setDescription((String) null);
      assertEquals(1310, appt0.getStartDay());
      assertEquals(-2227, appt0.getStartMinute());
      assertEquals(-2227, appt0.getStartHour());
      assertEquals("IY$sP,S", appt0.getTitle());
      assertEquals(689, appt0.getStartYear());
      assertEquals(1310, appt0.getStartMonth());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt((-2227), (-2227), 1310, 1310, 689, "IY$sP,S", (String) null);
      assertEquals("IY$sP,S", appt0.getTitle());
      
      appt0.setTitle("");
      assertEquals(1310, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 1, 0, (-1891), "\t", (String) null);
      assertEquals("\t", appt0.getTitle());
      
      appt0.setTitle((String) null);
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt((-164), (-164), (-164), (-164), (-164), "0>v++kjb\"uDuL D", "0>v++kjb\"uDuL D");
      String string0 = appt0.getTitle();
      assertEquals(-164, appt0.getStartHour());
      assertEquals(-164, appt0.getStartMinute());
      assertEquals(-164, appt0.getStartMonth());
      assertEquals(-164, appt0.getStartDay());
      assertEquals("0>v++kjb\"uDuL D", string0);
      assertFalse(appt0.getValid());
      assertEquals("0>v++kjb\"uDuL D", appt0.getDescription());
      assertEquals(-164, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt((-1082), (-1082), 0, 0, 1847, "", "");
      int int0 = appt0.getStartDay();
      assertEquals(1847, appt0.getStartYear());
      assertEquals(-1082, appt0.getStartMinute());
      assertEquals(0, int0);
      assertEquals(0, appt0.getStartMonth());
      assertEquals(-1082, appt0.getStartHour());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 1, 0, (-1891), "\t", (String) null);
      boolean boolean0 = appt0.getValid();
      assertEquals(-1891, appt0.getStartYear());
      assertFalse(boolean0);
      assertEquals("\t", appt0.getTitle());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertEquals("", appt0.getDescription());
      assertEquals(1, appt0.getStartDay());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt((-318), (-318), (-318), (-318), (-318), ",c0", ",c0");
      int int0 = appt0.getStartHour();
      assertEquals(-318, appt0.getStartDay());
      assertEquals(",c0", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals((-318), int0);
      assertEquals(-318, appt0.getStartMinute());
      assertEquals(",c0", appt0.getDescription());
      assertEquals(-318, appt0.getStartYear());
      assertEquals(-318, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt((-1252), 2136, (-975), (-975), (-975), "Z8HeP", "Z8HeP");
      int int0 = appt0.getStartYear();
      assertEquals("Z8HeP", appt0.getTitle());
      assertEquals(-975, appt0.getStartDay());
      assertEquals(-975, appt0.getStartMonth());
      assertEquals(-1252, appt0.getStartHour());
      assertEquals((-975), int0);
      assertEquals("Z8HeP", appt0.getDescription());
      assertEquals(2136, appt0.getStartMinute());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt((-164), (-164), (-164), (-164), (-164), "0>v++kjb\"uDuL D", "0>v++kjb\"uDuL D");
      int int0 = appt0.getStartMinute();
      assertEquals(-164, appt0.getStartDay());
      assertEquals("0>v++kjb\"uDuL D", appt0.getDescription());
      assertEquals((-164), int0);
      assertEquals(-164, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals("0>v++kjb\"uDuL D", appt0.getTitle());
      assertEquals(-164, appt0.getStartYear());
      assertEquals(-164, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(0, 23, 23, 0, 23, "XK}p(E", "XK}p(E");
      String string0 = appt0.getDescription();
      assertEquals(0, appt0.getStartMonth());
      assertEquals("XK}p(E", string0);
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartDay());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals("XK}p(E", appt0.getTitle());
      assertEquals(23, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(0, (-1234), 0, 0, 0, "FJHb", "FJHb");
      int int0 = appt0.getStartMonth();
      assertEquals("FJHb", appt0.getDescription());
      assertEquals(0, appt0.getStartHour());
      assertEquals("FJHb", appt0.getTitle());
      assertEquals(0, int0);
      assertEquals(-1234, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt((-2227), (-2227), 1310, 1310, 689, "IY$sP,S", (String) null);
      String string0 = appt0.toString();
      assertEquals(1310, appt0.getStartDay());
      assertEquals("IY$sP,S", appt0.getTitle());
      assertEquals("", appt0.getDescription());
      assertEquals(-2227, appt0.getStartMinute());
      assertEquals(-2227, appt0.getStartHour());
      assertNull(string0);
      assertEquals(689, appt0.getStartYear());
      assertEquals(1310, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, (-2880), (-2502), "", "");
      appt0.setStartMonth(83);
      assertEquals(83, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(59, 59, 2893, 59, 0, ":v#Ud86}", "");
      assertEquals(59, appt0.getStartHour());
      
      appt0.setStartHour(0);
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt(0, (-1460), 0, 0, 0, (String) null, (String) null);
      appt0.setStartMinute(586);
      assertEquals(586, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt((-164), (-164), (-164), (-164), (-164), "0>v++kjb\"uDuL D", "0>v++kjb\"uDuL D");
      appt0.setStartYear(2760);
      int int0 = appt0.getStartYear();
      assertEquals(2760, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, (-2880), (-2502), "", "");
      appt0.setStartDay(12);
      assertEquals(12, appt0.getStartHour());
      assertEquals(12, appt0.getStartDay());
      assertEquals(-2880, appt0.getStartMonth());
      assertEquals(12, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals(-2502, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, (-2880), (-2502), "", "");
      appt0.setStartHour(11);
      assertEquals(-2880, appt0.getStartMonth());
      
      appt0.setStartMonth(12);
      String string0 = appt0.toString();
      assertEquals("\t12/12/-2502 at 11:12am ,, \n", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Appt appt0 = new Appt(12, 12, 12, (-2880), (-2502), "", "");
      assertEquals(-2880, appt0.getStartMonth());
      
      appt0.setStartMonth(12);
      String string0 = appt0.toString();
      assertEquals("\t12/12/-2502 at 12:12pm ,, \n", string0);
  }
}
